<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:viewModels="clr-namespace:Inventory.ViewModels.MainView.ViewModels"
					xmlns:vm1="clr-namespace:Inventory.ViewModels.AddItem.ViewModels"
					xmlns:viewModels1="clr-namespace:Inventory.ViewModels.AddEditConsignor.ViewModels"
					xmlns:views1="clr-namespace:Inventory.ViewModels.AddEditConsignor.Views"
					xmlns:views2="clr-namespace:Inventory.ViewModels.AddItem.Views"
					xmlns:vm2="clr-namespace:Inventory.ViewModels.ConsignorItems.ViewModels"
					xmlns:views3="clr-namespace:Inventory.ViewModels.ConsignorItems.Views"
					xmlns:viewModels2="clr-namespace:Inventory.ViewModels.EditItem.ViewModels"
					xmlns:views4="clr-namespace:Inventory.ViewModels.MainView.Views"
                    xmlns:views6="clr-namespace:Inventory.ViewModels.EditItem.Views"
					xmlns:vm="clr-namespace:Inventory.ViewModels.PrintBarcodesView.ViewModels"
					xmlns:views="clr-namespace:Inventory.ViewModels.PrintBarcodesView.Views"
					xmlns:viewModels11="clr-namespace:Inventory.ViewModels.AddMember.ViewModels"
					xmlns:views5="clr-namespace:Inventory.ViewModels.AddMember.Views">
	
<!--	<conv:CommentsConverter x:Key="CommentsConverter" />
-->
	<!--   Here I'm binding ViewModels to Views, so the content         -->
	<!--   control will know what to display (on the view) when        -->
    <!--   it encounters a ViewModel                                    -->
    <DataTemplate DataType="{x:Type vm1:AddBookVm}" >       
        <views2:AddBookView />
	</DataTemplate>

	<DataTemplate DataType="{x:Type vm1:AddItemVm}">
        <views2:AddItemView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewModels:MainViewVm}">
        <views4:MainView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm1:AddGameVm}">
        <views2:AddGameView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm1:AddVideoVm}">
        <views2:AddVideoView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm1:AddTeachingAideVm}">
        <views2:AddTeachingAideView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm1:AddOtherVm}">
        <views2:AddOtherView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewModels2:EditItemVm}">
        <views6:EditItemView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewModels2:BookDataGridVm}">
        <views6:BookDataGridView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewModels2:GameDataGridVm}">
        <views6:GameDataGridView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewModels2:OtherDataGridVm}">
        <views6:OtherDataGridView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewModels2:TeachingAideDataGridVm}">
        <views6:TeachingAideDataGridView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewModels2:VideoDataGridVm}">
        <views6:VideoDataGridView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewModels1:AddConsignorVm}">
        <views1:AddConsignorView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewModels11:AddMemberVm}">
        <views5:AddMemberView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm2:ConsignorItemsVm}">
        <views3:ConsignorItemsView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm1:AddItemBarcodesVm}">
        <views2:AddItemBarcodesView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:PrintBarcodesVm}">
        <views:PrintBarcodesView/>
    </DataTemplate>

    
    <!--   You can of course simply use the dataTemplate to directly manipulate   -->
	<!--   how things will look, like in the following example:                   -->
    
        
	

    <!--
	<DataTemplate DataType="{x:Type model:SomeClass}">
		<Border Background="Navy"  Margin="2" Padding="2">
			<StackPanel Orientation="Horizontal">

				<TextBlock Text="{Binding Date, StringFormat=dd-MM-yyyy}" Width="80"/>
				<TextBlock Text="{Binding Name}" FontWeight="Bold" Width="130"/>
				<TextBlock Text="{Binding Age}" Width="60" Foreground="LightSteelBlue"/>
				<TextBlock Text="{Binding Comment, Converter={StaticResource CommentsConverter}}" />

			</StackPanel>
			
		</Border>
	</DataTemplate>
	
-->


</ResourceDictionary>